{"version":3,"sources":["getState.js","App.js","reportWebVitals.js","index.js"],"names":["loadState","serializedState","localStorage","getItem","JSON","parse","err","App","useState","goal","haveNow","updateHaveNow","current","updateCurrent","useEffect","undefined","state","stringify","setItem","saveState","className","toFixed","type","placeholder","onChange","e","target","value","onKeyDown","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEaA,G,MAAY,WACrB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,eAC7C,GAAwB,OAApBF,EACF,OAGF,OADkBG,KAAKC,MAAMJ,GAE7B,MAAOK,GACP,UC2CSC,MAlDf,WAAgB,IAAD,EAEcC,mBAAS,MAFvB,mBAENC,EAFM,aAGoBD,mBAAS,IAH7B,mBAGNE,EAHM,KAGGC,EAHH,OAIoBH,mBAAS,IAJ7B,mBAINI,EAJM,KAIGC,EAJH,KA4Bb,OAtBAC,qBAAU,gBACWC,IAAhBf,KACDW,EAAcX,OAEf,IAEHc,qBAAU,YDFe,SAACE,GACxB,IACE,IAAMf,EAAkBG,KAAKa,UAAUD,GACvCd,aAAagB,QAAQ,cAAejB,GACpC,WCDFkB,CAAUT,KACT,CAACA,IAeF,qBAAKU,UAAU,MAAf,SACC,sBAAKA,UAAU,YAAf,UACG,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,WAAf,SACE,+BAAOV,MAET,qBAAKU,UAAU,WAAf,SACE,gCAAgB,IAARV,EAAYD,GAAMY,QAAQ,OAEpC,qBAAKD,UAAU,WAAf,SACE,+BAAOX,SAGX,qBAAKW,UAAU,6BAAf,SACE,uBAAOE,KAAK,OAAOC,YAAY,cAAcH,UAAU,QAAQI,SA1BxD,SAACC,GACZZ,EAAcY,EAAEC,OAAOC,QAyB8DC,UAAWhB,EAtBpF,SAACa,GACF,UAAVA,EAAEI,MACHlB,EAAcD,IAAWE,GACzBC,EAAc,MAmBqG,KAAMc,MAAOf,YCnCvHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.769a7e38.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nexport const loadState = () => {\n    try {\n      const serializedState = localStorage.getItem('counterData');\n      if (serializedState === null) {\n        return undefined;\n      }\n      let parsedStore = JSON.parse(serializedState);\n      return parsedStore;\n    } catch (err) {\n      return undefined;\n    }\n  }; \n  export const saveState = (state) => {\n    try {\n      const serializedState = JSON.stringify(state);\n      localStorage.setItem('counterData', serializedState);\n    } catch {\n    }\n  };","import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport {loadState, saveState} from './getState';\n\nfunction App() {\n\n  const [goal, updateGoal] = useState(48000);\n  const [haveNow, updateHaveNow] = useState(0);\n  const [current, updateCurrent] = useState('');\n\n  useEffect(() => {\n    if(loadState() !== undefined){\n      updateHaveNow(loadState());\n    }\n  }, []);\n\n  useEffect(() => {\n    saveState(haveNow);\n  }, [haveNow]);\n\n\n  const getSum = (e)=>{\n      updateCurrent(e.target.value);\n  };\n\n  const saveSum = (e)=>{\n    if(e.key === 'Enter'){\n      updateHaveNow(haveNow + +current);\n      updateCurrent('');\n    }\n    \n  };\n  return (\n    <div className=\"App\">\n     <div className='container'>\n        <div className='inner-cont'>\n          <div className='top-cont'>\n            <span>{haveNow}</span>\n          </div>\n          <div className='top-cont'>\n            <span>{(haveNow*100/goal).toFixed(2)}</span>\n          </div>\n          <div className='top-cont'>\n            <span>{goal}</span>\n          </div>\n        </div>\n        <div className='inner-cont input-container'>\n          <input type='text' placeholder='write a sum' className='input' onChange={getSum} onKeyDown={current? saveSum : null} value={current}/>\n        </div>\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}